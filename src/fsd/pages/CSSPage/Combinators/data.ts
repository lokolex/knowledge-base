export const combinatorsData = [
  {
    title: 'Комбинатор потомка',
    text1: `Записывается как селектор1 селектор2. Находит все потомки элемента, который подходит под селектор1, не зависимо от вложенности и 
      применяет к ним стили.`,
    htmlCode: `
    <p>
      Оказалось, что селекторы — это <span>не так страшно,</span>
      как я думал. Нужно только немного попрактиковаться,
      <span>и всё сразу станет ясно.</span>
    </p>
    `,
    cssCode: `
    p span {
      color: blue;
    }
    `,
    text2: `Здесь в синий цвет окрасятся «не так страшно» и «всё сразу станет ясно.».`,
  },
  {
    title: 'Соседний родственный комбинатор',
    text1: `Записывается как селектор1 + селектор2. Выбирает элемент, подходящий под селектор2, перед которым расположен элемент, подходящий под селектор1.`,
    htmlCode: `
    <div>
      <p class="first">Сегодня я стал великим фронтендером.</p>
      <p class="second">Я написал стили для текста.</p> 
    <div>
    `,
    cssCode: `
    .first + .second {
      color: white;
    }
    `,
    text2: `Селектор .first + .second применит стили к абзацу с классом .second, потому что перед ним есть элемент с классом .first. 
      Предложение «Я написал стили для текста.» станет белым.`,
  },
  {
    title: 'Дочерний комбинатор',
    text1: `Записывается как селектор1 > селектор2. Выбирает элементы, которые являются прямыми потомками элемента, подходящего под селектор1.`,
    htmlCode: `
    <div class="decoration">
      <p>Я выучил CSS</p>
	  <div>
        <p>Ну селекторы точно знаю.</p>
      </div>
    </div>
    `,
    cssCode: `
    .decoration > p {
      color: red;
    }
    `,
    text2: `Стили применятся только к «Я выучил CSS», этот текст станет красным. 
      Т.к. текст «Ну селекторы точно знаю.» не является прямым потомком .decoration, потому что вложен в div`,
  },
  {
    title: 'Общий родственный комбинатор',
    text1: `Записывается как селектор1 ~ селектор2. Добавляет стили для элемента, который соответствует селектор2, если перед ним стоит элемент, подходящий под  селектор1. 
      Оба элемента должны принадлежать одному родителю.`,
    htmlCode: `
    <div>
      <p>Это было прекрасное раннее утро. Идеальное время, чтобы приготовить чашку кофе или чая, открыть ноутбук и выучить CSS.</p>
      <p>Так Вовка и поступил. Погладил кота, набрался решимости и открыл для себя новый мир вёрстки.</p>
    </div>
    `,
    cssCode: `
    p ~ p {
      margin-top: 1em;
    }
    `,
    text2: `Стили применятся ко второму параграфу, появится внешний отступ сверху. <br /> 
      Этот селектор отличается от соседнего селектора тем, что между элементами селектор1  и селектор2 могут находиться другие элементы.`,
  },
] as const;
